{
  "name": "swiftship",
  "version": "0.1.0",
  "private": true,
  "description": "Fast and reliable package tracking system built with Next.js",
  "keywords": [
    "package-tracking",
    "shipping",
    "logistics",
    "nextjs",
    "typescript"
  ],
  "author": "SwiftShip Team",
  "license": "MIT",
  "homepage": "https://swiftship.netlify.app",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/swiftship.git"
  },
  "scripts": {
    "dev": "next dev",
    "build": "next build && npm run build:functions",
    "build:netlify": "npm run build",
    "build:functions": "node scripts/build-netlify-functions.js",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "deploy": "echo 'Deploy via Netlify dashboard'",
    "deploy:preview": "echo 'Deploy preview via Netlify dashboard'",
    "postbuild": "echo \"Build completed successfully\"",
    "clean": "rm -rf .next out netlify/functions",
    "analyze": "ANALYZE=true npm run build",
    "generate-secrets": "node scripts/generate-secrets.js",
    "setup": "npm install && npm run generate-secrets",
    "migrate:postgres": "npx ts-node scripts/migrate-to-postgres.ts",
    "migrate:postgres:dry-run": "npx ts-node scripts/migrate-to-postgres.ts --dry-run --verbose",
    "migrate:execute": "npx ts-node scripts/migration-executor.ts",
    "migrate:execute:dry-run": "npx ts-node scripts/migration-executor.ts --dry-run --verbose",
    "migrate:rollback": "npx ts-node scripts/migration-executor.ts --force-rollback",
    "verify:migration": "npx ts-node scripts/post-migration-verification.ts",
    "verify:migration:verbose": "npx ts-node scripts/post-migration-verification.ts --verbose",
    "migrate:full": "npx ts-node scripts/migration-orchestrator.ts",
    "migrate:full:dry-run": "npx ts-node scripts/migration-orchestrator.ts --dry-run --verbose",
    "validate:config": "npx ts-node -e \"import('./lib/startupValidation').then(m => m.performStartupValidation().then(r => console.log(JSON.stringify(r, null, 2))))\"",
    "health:postgres": "curl -s http://localhost:3000/api/health-postgres | jq",
    "diagnostics:postgres": "curl -s http://localhost:3000/api/diagnostics-postgres | jq"
  },
  "dependencies": {
    "@types/pg": "^8.15.5",
    "next": "^14.2.33",
    "next-auth": "^4.24.5",
    "pg": "^8.16.3",
    "react": "^18",
    "react-dom": "^18",
    "sqlite3": "^5.1.6"
  },
  "devDependencies": {
    "@netlify/plugin-nextjs": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/supertest": "^6.0.3",
    "cross-env": "^7.0.3",
    "eslint": "^8",
    "eslint-config-next": "14.0.0",
    "jest": "^30.2.0",
    "netlify-cli": "^17.0.0",
    "node-mocks-http": "^1.17.2",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.5",
    "typescript": "^5"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
